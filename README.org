* О *проекте*
  Этот *проект* ставит целью создать общие и специальные средства для управления параметрами отображения разных программ, путём изменения их конфигурационных файлов в соответствии с настройками, указанными в файле конфигурации *проекта*.
  
* Этапы выполнения *проекта*
   1. Реализация *проекта*, как надстройки для системы управления темами оконного менеджера awesome. Т.о. на первом этапе в качестве файла конфигурации *проекта* выступает файл конфигурации темы awesome.
   2. Реализация *проекта*, как общего решения, не зависящего от инфраструктуры какого-то конкретного оконного менеджера.

** Первый этап
   Далее: 
   - /курсивом/ обозначаются термины, действительные в рамках первого этапа проекта.
   - /конфигурация/ - это таблица lua, содержащая все сведения, необходимые для формирования и применения настроек конфигурируемой с помощью *проекта* программы.
   - /настройки конфигурации/ - подтаблица таблицы /конфигурация/, содержащая сведения, являющиеся настройками для конфигурируемой с помощью *проекта* программы

*** Файлы на первом этапе выполнения *проекта*
    *Проект* на первом этапе его выполнения представляет собой рабочую конфигурацию оконного менеджера awesome.
    - [[./lib/palette.lua]] - работа с палитрой GIMP (пока что только её чтение)
    - [[./lib/actions.lua]] - действия общего рода по применению /конфигураций/
    - [[./lib/configs.lua]] - работа с /настройками конфигураций/ (получение строк из /настроек конфигураций/)
    - [[./lib/acyl.lua]]    - то, что относится к /конфигурации/ темы иконок Any Color You Like
    - [[./lib/utils.lua]]   - вспомогательные функции (не нужно (по-моему не используется))
    - [[./lib/vardump.lua]] - вывод таблиц (для отладки (не нужно в свете pl.pretty.write()))

    - [[./themes/medusa/theme.lua]] - рабочий файл настроек темы awesome
    - [[./rc.lua]]                  - рабочий файл настроек awesome

    - [[./README.org]]      - этот файл

*** Зависимости
    - [[http://penlight.luaforge.net/][penlight]]
    - [[http://keplerproject.github.com/luafilesystem/][lfs]]
    - [[http://luaforge.net/projects/luaposix/][luaposix]]
    - [[http://sputnik.freewisdom.org/lib/colors/][colors]] - лежит в lib/colors.lua, за документацией обращайтесь по ссылке

    Некоторые из них устанавливаются с помощью luarocks

*** Как это должно работать на первом этапе
    При инициализации темы awesome читается файл палитры GIMP, содержащий цвета, которые будут использованы в теме awesome и в настройках разных программ, определяемых в файле темы awesome особым образом.
    

    Все /конфигурации/ содержатся в таблице theme.configs, определяемой в файле темы awesome. /Конфигурация/ состоит из следующего:
    - files = {} -- таблица, содержащая все файлы, которые должны быть изменены\переписаны в соответствии с заданными /настройками конфигурации/.
    - funcs = {} -- таблица, содержащая ссылки на все функции, которые нужно выполнить по порядку для применения /настроек конфигурации/. Каждая из этих функций получает в качестве аргумента /конфигурацию/, к которой принадлежит. Эти функции специфичны для /конфигурации/, в которой указаны. Хотя некоторые из них (как actions.writeFile) достаточно общи для того, чтобы их можно было запускать для разных конфигураций.
    - data = {} -- таблица, содержащая /настройки конфигурации/ - т.е. те сведения, из которых, через преобразования с помощью функций, заданных в funcs, получится таблица строк, которые и представляют собой настройки соответствующей программы. Эти строки затем могут обрабатываться далее в оставшихся для выполнения функциях из funcs.
    - strings = {} -- таблица, содержащая все строки /настроек конфигурации/, которые должны быть так или иначе применены (записаны в файл, экспортированы, как содержимое переменной окружения и т.д.) с помощью одной из последних функций в funcs.

**** ACYL
     /Конфигурация/ перекрашиваемой темы иконок "Any Color You Like" устроена так:

     Сначала осуществляется рекурсивный поиск иконок в paths.source и заполнение таблицы icons так, что ключами этой таблицы являются пути иконок, а их соответствующими значениями - списки симлинков (получаемые так же рекурсивно из того же paths.source), затем в каждой иконке из icons после преобразования последней в строку, заменяется содержимое тэга acyl-settings на полученное из шаблона, указанного в data[i].template - для иконок, чей путь относительно paths.dest совпадает с каким-нибудь шаблоном из data[i].patterns. Переменные для шаблонов берутся из data[i].variables. Полученная таким образом строка записывается в файл в том же каталоге, что и файл, из которого эта строка получена, но относительно paths.dest. Далее, для записанной таким образом иконки, создаются (относительно paths.dest) все соответствующие ей симлинки. Затем из paths.source копируется в paths.dest файл index.theme, в котором заменяется строка "AnyColorYouLike" на index.Icon_Theme.Name (нормальную генерацию индекса сделаю позже). И в конце концов для пути paths.dest создаётся симлинк paths.symlinkto

*** TODO [9/9]
    - [X] [[./lib/pallete.lua]] интегрировать colors.lua
    - [X] [[./lib/pallete.lua]] добавить возможность задавать несколько
	  имён для одного цвета, например, разделяя имена запятыми
	  в файле палитры.
    - [X] [[./lib/actions.lua]] добавить функцию для экспорта _переменных окружения_
    - [X] [[./lib/configs.lua]] переместить функцию синхронизации xrdb в
	  [[./lib/actions.lua]]
    - [X] [[./lib/acyl/lua]] определить состав /конфигурации/
    - [X] [[./lib/acyl.lua]] добавить генерацию нужного svg-куска из /конфигурации/
    - [X] [[./lib/acyl.lua]] добавить копирование отсутствующих в теме иконок из _каталога-источника_ в _каталог-приёмник_ внутри каталога темы
    - [X] [[./lib/acyl.lua]] добавить создание симлинка для текущей темы иконок
	  в _каталог симлинка_ (.icons/awesome-icon-theme по-умолчанию)
    - [X] [[./lib/acyl.lua]] добавить функцию формирования списка файлов
